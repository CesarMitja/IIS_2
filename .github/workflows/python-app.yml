name: Python app

on:
  schedule:
    - cron: '0 * * * *'  
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc dvc[s3]
          pip install --upgrade dvc dvc[s3]
      - name: Configure DVC Remote and pull
        run: |
          dvc remote add origin s3://dvc -f
          dvc remote modify origin endpointurl https://dagshub.com/CesarMitja/IIS_2.s3
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull --force
      - name: Test with pytest
        run: pytest


  Test_validate_fetch_and_process-data:
    needs: build
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests datetime pathlib pandas dvc dvc[s3] great_expectations evidently==0.2.8 black jupyter
      - name: Setup git
        run: |
          git add .dvc/config
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Configure DVC Remote and pull
        id: config
        run: |
          dvc remote add origin s3://dvc -f
          dvc remote modify origin endpointurl https://dagshub.com/CesarMitja/IIS_2.s3
          dvc remote modify origin --local access_key_id 42527d2ba794fcd8a8c503b97f12d899a50f44b8
          dvc remote modify origin --local secret_access_key 42527d2ba794fcd8a8c503b97f12d899a50f44b8
          dvc pull -f

      - name: Copy data
        id: copy
        if: steps.config.outcome == 'success'
        run: 
          cp data/processed/data_for_prediction.csv data/processed/prediction_ref.csv;
          cp data/raw/vreme.csv data/raw/vreme_ref.csv;
          cp data/raw/kolesa.csv data/raw/kolesa_ref.csv

      - name: Fetch data
        id: fetch
        if: steps.config.outcome == 'success'
        run: 
          python src/data/Fetch_data.py
          
      - name: Process data
        id: proc
        if: steps.fetch.outcome == 'success'
        run: 
          python src/data/Process_data.py
      - name: List Checkpoints directory
        run: ls -la ./great_expectations/checkpoints/
        
      # - name: Validate Data 
      #   id: validate
      #   if: steps.proc.outcome == 'success'
      #   run: |
      #     python test_data/valid_and_test_data.py
      #     echo "Y" | great_expectations docs build
      
          
      - name: Deploy DataDocs to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}


      - name: Add data with GIT
        if: steps.validate.outcome == 'success'
        run: |
          dvc add data/raw/vreme.csv
          dvc push -r origin data/raw/vreme.csv
          dvc add data/raw/kolesa.csv
          dvc push -r origin data/raw/kolesa.csv
          dvc add data/processed/data_for_prediction.csv
          dvc push -r origin data/processed/data_for_prediction.csv
          git add .
          git commit -m "Update data" -a || echo "No changes to commit"
          git push
           

  build-and-run-docker:
    needs: Test_validate_fetch_and_process-data
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests datetime pathlib pandas dvc dvc[s3]
          
      - name: Configure DVC Remote and pull
        run: |
          dvc remote add origin s3://dvc -f
          dvc remote modify origin endpointurl https://dagshub.com/CesarMitja/IIS_2.s3
          dvc remote modify origin --local access_key_id ${{ secrets.DVC_ACCESS_KEY_ID }}
          dvc remote modify origin --local secret_access_key ${{ secrets.DVC_SECRET_ACCESS_KEY }}
          dvc pull --force


      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: cesi212314/web_service_iis:latest
      - name: Build and push UI Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./src/client
          file: ./src/client/Dockerfile
          push: true
          tags: cesi212314/user_interface_iis:latest